{
  "Components": [
    {
      "Name": "TextBox",
      "Type": "UXC_TextBox",
      "Description": "Standard text input component",
      "HasLabelText": true,
      "NeedVisibilityBlock": false,
      "HasInnerText": false,
      "HtmlClasses": [ "text_field" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "Label_Text": "{lbl_Txt}",
        "@bind-value": "{id}",
        "Enable": "IsEnable{id}"
      },
      "Events": [],
      "RequiredVariables": [
        "{id}:string:\"\"",
        "IsEnable{id}:bool:true"
      ]
    },
    {
      "Name": "Email",
      "Type": "UXC_Email",
      "Description": "Standard email input component",
      "HasLabelText": true,
      "NeedVisibilityBlock": false,
      "HasInnerText": false,
      "HtmlClasses": [ "text_field" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "Label_Text": "{lbl_Txt}",
        "Required": "false",
        "@bind-value": "{id}",
        "Enable": "IsEnable{id}"
      },
      "Events": [],
      "RequiredVariables": [
        "{id}:string:\"\"",
        "IsEnable{id}:bool:true"
      ]
    },
    {
      "Name": "TextArea",
      "Type": "UXC_TxtArea",
      "Description": "Standard text input component",
      "HasLabelText": true,
      "NeedVisibilityBlock": false,
      "HasInnerText": false,
      "HtmlClasses": [ "text_field" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "Label_Text": "{lbl_Txt}",
        "@bind-value": "{id}",
        "Disable": "IsDisable{id}"

      },
      "Events": [],
      "RequiredVariables": [
        "{id}:string:\"\"",
        "IsDisable{id}:bool:false"
      ]
    },
    {
      "Name": "Date",
      "Type": "UXC_Date",
      "Description": "Standard date input component",
      "HasLabelText": true,
      "NeedVisibilityBlock": false,
      "HasInnerText": false,
      "HtmlClasses": [ "text_field" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "Label_Text": "{lbl_Txt}",
        "@bind-value": "{id}",
        "Enable": "IsEnable{id}"
      },
      "Events": [],
      "RequiredVariables": [
        "{id}:string:\"dd/mm/yyyy\"",
        "IsEnable{id}:bool:true"
      ]
    },
    {
      "Name": "File",
      "Type": "UXC_File",
      "Description": "Standard file input component",
      "HasLabelText": false,
      "NeedVisibilityBlock": false,
      "HasInnerText": false,
      "HtmlClasses": [ "text_field" ],
      "DefaultAttributes": {
        "MultipleFile": "hasMultipleFile{id}"
      },
      "Events": [],
      "RequiredVariables": [
        "hasMultipleFile{id}:bool:true"
      ]
    },
    {
      "Name": "AmountToWord",
      "Type": "UXC_AmountToWord",
      "Description": "Amount input for currency amount that shows in words!",
      "HasLabelText": true,
      "NeedVisibilityBlock": false,
      "HasInnerText": false,
      "HtmlClasses": [ "text_field", "ax_default" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "Label_Text": "{lbl_Txt}",
        "@bind-value": "{id}",
        "DecimalPoint": "2",
        "Enable": "IsEnable{id}"
      },
      "RequiredVariables": [
        "{id}:decimal:0.00m",
        "IsEnable{id}:bool:true"
      ]
    },
    {
      "Name": "Amount",
      "Type": "UXC_Amount",
      "Description": "Numeric input for currency amount!",
      "HasLabelText": true,
      "NeedVisibilityBlock": false,
      "HasInnerText": false,
      "HtmlClasses": [ "text_field", "ax_default" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "Label_Text": "{lbl_Txt}",
        "@bind-value": "{id}",
        "DecimalPoint": "2",
        "Enable": "IsEnable{id}"
      },
      "RequiredVariables": [
        "{id}:decimal:0.00m",
        "IsEnable{id}:bool:true"
      ]
    },
    {
      "Name": "Number",
      "Type": "UXC_Number",
      "Description": "Numeric input for Numbers",
      "HasLabelText": true,
      "NeedVisibilityBlock": false,
      "HasInnerText": false,
      "HtmlClasses": [ "text_field", "ax_default" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "Label_Text": "{lbl_Txt}",
        "@bind-value": "{id}",
        "Enable": "IsEnable{id}"
      },
      "RequiredVariables": [
        "{id}:string:\"\"",
        "IsEnable{id}:bool:true"
      ]
    },
    {
      "Name": "Dropdown",
      "Type": "UXC_Dynamic_Dropdown",
      "Description": "Dynamic dropdown with data binding",
      "HasLabelText": true,
      "HasInnerText": false,
      "NeedVisibilityBlock": false,
      "HtmlClasses": [ "droplist" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "Label_Text": "{lbl_Txt}",
        "@bind-Value": "{id}",
        "DataSource": "{id}List",
        "Enable": "IsEnable{id}"
      },
      "Events": [],
      "RequiredVariables": [
        "{id}:string:\"\"",
        "{id}List:List<Dropdown>:new()",
        "IsEnable{id}:bool:true"
      ]
    },
    {
      "Name": "DataGrid",
      "Type": "UXC_DataGrid",
      "Description": "Data grid with CRUD operations",
      "HasLabelText": true,
      "HasInnerText": false,
      "NeedVisibilityBlock": true,
      "HtmlClasses": [ "grid" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "@key": "@({id}key)",
        "Label_Text": "{lbl_Txt}",
        "BtnColValue": "Id",
        "ShowEditButton": "true",
        "ShowDeleteButton": "true",
        "ShowViewButton": "false",
        "EnableSelection": "true",
        "SelectedColumns": "{id}SelectedColumns",
        "CustomColumnNames": "{id}CustomColumnNames",
        "DataSource": "{id}DataList",
        "OnFHEditClick": "OnGrid{id}Edit",
        "OnFHDeleteClick": "OnGrid{id}Delete"
      },
      "Events": [
        {
          "EventName": "OnEdit",
          "SourceAttribute": "Edit",
          "TargetEventName": "OnGrid{id}Edit",
          "RequiredParameters": [ "string value" ],
          "Body": "",
          "RequiresStateHasChanged": true
        },
        {
          "EventName": "OnDelete",
          "SourceAttribute": "Delete",
          "TargetEventName": "OnGrid{id}Delete",
          "RequiredParameters": [ "string value" ],
          "Body": "",
          "RequiresStateHasChanged": true
        }
      ],
      "RequiredVariables": [
        "IsVisible{id}:bool:true",
        "IsEnableSelection{id}:bool:true",
        "{id}SelectedColumns:List<string>:new()",
        "{id}CustomColumnNames:Dictionary<string,string>:new()",
        "{id}Key:Guid:Guid.NewGuid()"
      ]
    },
    {
      "Name": "Panel",
      "Type": "div",
      "Description": "Container panel with title",
      "HasLabelText": true,
      "HasInnerText": true,
      "NeedVisibilityBlock": true,
      "IsContainer": true,
      "HtmlClasses": [ "box_1", "box_2", "box_3" ],
      "Styles": {
        "default": "row border my-2"
      },
      "RequiredVariables": [
        "IsHid{id}:bool:false"
      ]
    },
    {
      "Name": "Button",
      "Type": "button",
      "Description": "Action button",
      "HasLabelText": false,
      "HasInnerText": true,
      "NeedVisibilityBlock": false,
      "HtmlClasses": [ "button", "primary_button" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "class": "btn btn-sm btn-outline-info",
        "disabled": "IsDisabled{id}"
      },
      "Events": [
        {
          "EventName": "OnClick",
          "SourceAttribute": "Click",
          "TargetEventName": "@onclick",
          "RequiredParameters": [],
          "Body": "",
          "RequiresStateHasChanged": true
        }
      ],
      "RequiredVariables": [
        "IsDisabled{id}:bool:false"
      ]
    },
    {
      "Name": "Switch",
      "Type": "UXC_Switch",
      "Description": "Switch/Checkbox input component",
      "HasLabelText": true,
      "HasInnerText": false,
      "NeedVisibilityBlock": false,
      "HtmlClasses": [ "checkbox", "ax_default" ],
      "DefaultAttributes": {
        "Id": "{id}",
        "Label_Text": "{lbl_Txt}",
        //"@bind-value": "{id}",
        "Enable": "IsEnable{id}",
        "IsChecked": "{id}",
        "IsVisible": "IsVisible{id}"
      },
      "Events": [
        {
          "EventName": "OnCheckedChanged",
          "SourceAttribute": "Changed",
          "TargetEventName": "IsCheckedChanged",
          "RequiredParameters": [ "bool value" ],
          "Body": "{id} = value;",
          "RequiresStateHasChanged": true
        }
      ],
      "RequiredVariables": [
        "{id}:bool:false",
        "IsVisible{id}:bool:true",
        "IsEnable{id}:bool:true"
      ]
    }
  ]
}